package io.intelligence.ppmtool.web;

<<<<<<< HEAD
=======
import java.util.HashMap;
import java.util.Map;

>>>>>>> branch5
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
<<<<<<< HEAD
=======
import org.springframework.validation.FieldError;
>>>>>>> branch5
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.intelligence.ppmtool.domain.Project;
import io.intelligence.ppmtool.services.ProjectService;

@RestController
@RequestMapping("/api/project")
public class ProjectController {

	@Autowired
	private ProjectService projectService;
	
	@PostMapping("")
	public ResponseEntity<?> createNewProject(@Valid @RequestBody Project project, BindingResult result){
		if(result.hasErrors()) {
<<<<<<< HEAD
			return new ResponseEntity<String>("Invalid Project Object", HttpStatus.BAD_REQUEST);
=======
			
			Map<String,String> errorMap = new HashMap();
			
			for(FieldError error:result.getFieldErrors()) {
				errorMap.put(error.getField(), error.getDefaultMessage());
			}
			
			
			return new ResponseEntity<Map<String,String>>(errorMap, HttpStatus.BAD_REQUEST);
>>>>>>> branch5
					
		}
		
		Project project1 = projectService.saveOrUpdate(project);
		return new ResponseEntity<Project>(project1, HttpStatus.CREATED);
	}
	
	
}
